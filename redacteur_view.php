<?php
// This script and data application were generated by AppGini 5.61
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/redacteur.php");
	include("$currDir/redacteur_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('redacteur');
	if(!$perm[0]){
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "redacteur";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = array(   
		"`redacteur`.`id_redact`" => "id_redact",
		"`redacteur`.`member_id`" => "member_id",
		"`redacteur`.`prenom`" => "prenom",
		"`redacteur`.`nom`" => "nom",
		"`redacteur`.`email`" => "email",
		"`redacteur`.`score_total`" => "score_total",
		"IF(    CHAR_LENGTH(`ref_badges1`.`titre`) || CHAR_LENGTH(`ref_badges1`.`icone_badge`), CONCAT_WS('',   `ref_badges1`.`titre`, `ref_badges1`.`icone_badge`), '') /* Badges */" => "badges",
		"`redacteur`.`score_hist`" => "score_hist",
		"`redacteur`.`score_obj`" => "score_obj",
		"`redacteur`.`score_moy`" => "score_moy",
		"`redacteur`.`score_objets`" => "score_objets",
		"`redacteur`.`score_perso`" => "score_perso",
		"`redacteur`.`score_lets`" => "score_lets"
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(   
		1 => '`redacteur`.`id_redact`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => '`redacteur`.`score_total`',
		7 => 7,
		8 => '`redacteur`.`score_hist`',
		9 => '`redacteur`.`score_obj`',
		10 => '`redacteur`.`score_moy`',
		11 => '`redacteur`.`score_objets`',
		12 => '`redacteur`.`score_perso`',
		13 => '`redacteur`.`score_lets`'
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = array(   
		"`redacteur`.`id_redact`" => "id_redact",
		"`redacteur`.`member_id`" => "member_id",
		"`redacteur`.`prenom`" => "prenom",
		"`redacteur`.`nom`" => "nom",
		"`redacteur`.`email`" => "email",
		"`redacteur`.`score_total`" => "score_total",
		"IF(    CHAR_LENGTH(`ref_badges1`.`titre`) || CHAR_LENGTH(`ref_badges1`.`icone_badge`), CONCAT_WS('',   `ref_badges1`.`titre`, `ref_badges1`.`icone_badge`), '') /* Badges */" => "badges",
		"`redacteur`.`score_hist`" => "score_hist",
		"`redacteur`.`score_obj`" => "score_obj",
		"`redacteur`.`score_moy`" => "score_moy",
		"`redacteur`.`score_objets`" => "score_objets",
		"`redacteur`.`score_perso`" => "score_perso",
		"`redacteur`.`score_lets`" => "score_lets"
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters = array(   
		"`redacteur`.`id_redact`" => "Id auteur",
		"`redacteur`.`member_id`" => "Identifiant",
		"`redacteur`.`prenom`" => "Prenom",
		"`redacteur`.`nom`" => "Nom",
		"`redacteur`.`email`" => "Email",
		"`redacteur`.`score_total`" => "Score total",
		"IF(    CHAR_LENGTH(`ref_badges1`.`titre`) || CHAR_LENGTH(`ref_badges1`.`icone_badge`), CONCAT_WS('',   `ref_badges1`.`titre`, `ref_badges1`.`icone_badge`), '') /* Badges */" => "Badges"
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS = array(   
		"`redacteur`.`id_redact`" => "id_redact",
		"`redacteur`.`member_id`" => "member_id",
		"`redacteur`.`prenom`" => "prenom",
		"`redacteur`.`nom`" => "nom",
		"`redacteur`.`email`" => "email",
		"`redacteur`.`score_total`" => "score_total",
		"IF(    CHAR_LENGTH(`ref_badges1`.`titre`) || CHAR_LENGTH(`ref_badges1`.`icone_badge`), CONCAT_WS('',   `ref_badges1`.`titre`, `ref_badges1`.`icone_badge`), '') /* Badges */" => "badges"
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array(  'badges' => 'Badges');

	$x->QueryFrom = "`redacteur` LEFT JOIN `ref_badges` as ref_badges1 ON `ref_badges1`.`id_badge`=`redacteur`.`badges` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = false;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 0;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "redacteur_view.php";
	$x->RedirectAfterInsert = "redacteur_view.php?SelectedID=#ID#";
	$x->TableTitle = "Passeport R&#233;dacteur";
	$x->TableIcon = "resources/table_icons/administrator.png";
	$x->PrimaryKey = "`redacteur`.`id_redact`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150);
	$x->ColCaption = array("Prenom", "Nom", "Email", "Score total", "Badges");
	$x->ColFieldName = array('prenom', 'nom', 'email', 'score_total', 'badges');
	$x->ColNumber  = array(3, 4, 5, 6, 7);

	// template paths below are based on the app main directory
	$x->Template = 'templates/redacteur_templateTV.html';
	$x->SelectedTemplate = 'templates/redacteur_templateTVS.html';
	$x->TemplateDV = 'templates/redacteur_templateDV.html';
	$x->TemplateDVP = 'templates/redacteur_templateDVP.html';

	$x->ShowTableHeader = 0;
	$x->ShowRecordSlots = 0;
	$x->TVClasses = "col-md-offset-2 col-md-8";
	$x->DVClasses = "col-md-offset-2 col-md-8";
	$x->HighlightColor = '#FFF0C2';

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))){ $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])){ // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `redacteur`.`id_redact`=membership_userrecords.pkValue and membership_userrecords.tableName='redacteur' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])){ // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `redacteur`.`id_redact`=membership_userrecords.pkValue and membership_userrecords.tableName='redacteur' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3){ // view all
		// no further action
	}elseif($perm[2]==0){ // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`redacteur`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: redacteur_init
	$render=TRUE;
	if(function_exists('redacteur_init')){
		$args=array();
		$render=redacteur_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: redacteur_header
	$headerCode='';
	if(function_exists('redacteur_header')){
		$args=array();
		$headerCode=redacteur_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode){
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: redacteur_footer
	$footerCode='';
	if(function_exists('redacteur_footer')){
		$args=array();
		$footerCode=redacteur_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode){
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>