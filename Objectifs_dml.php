<?php

// Data functions (insert, update, delete, form) for table Objectifs

// This script and data application were generated by AppGini 5.61
// Download AppGini for free from https://bigprof.com/appgini/download/

function Objectifs_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('Objectifs');
	if(!$arrPerm[1]){
		return false;
	}

	$data['titreobj'] = makeSafe($_REQUEST['titreobj']);
		if($data['titreobj'] == empty_lookup_value){ $data['titreobj'] = ''; }
	$data['description_obj'] = makeSafe($_REQUEST['description_obj']);
		if($data['description_obj'] == empty_lookup_value){ $data['description_obj'] = ''; }
	if(is_array($_REQUEST['ref_o_gameplay'])){
		$MultipleSeparator=', ';
		foreach($_REQUEST['ref_o_gameplay'] as $k => $v)
			$data['ref_o_gameplay'] .= makeSafe($v) . $MultipleSeparator;
		$data['ref_o_gameplay'] = substr($data['ref_o_gameplay'], 0, -1 * strlen($MultipleSeparator));
	}else{
		$data['ref_o_gameplay']='';
	}
	$data['creer_par'] = parseCode('<%%creatorUsername%%>', true);
	$data['rattache_a_dos2j'] = makeSafe($_REQUEST['rattache_a_dos2j']);
		if($data['rattache_a_dos2j'] == empty_lookup_value){ $data['rattache_a_dos2j'] = ''; }
	if($data['titreobj']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Titre de l\'objectif': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['description_obj'] == '') $data['description_obj'] = "Le joueur doit ...";

	// hook: Objectifs_before_insert
	if(function_exists('Objectifs_before_insert')){
		$args=array();
		if(!Objectifs_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `Objectifs` set       `titreobj`=' . (($data['titreobj'] !== '' && $data['titreobj'] !== NULL) ? "'{$data['titreobj']}'" : 'NULL') . ', `description_obj`=' . (($data['description_obj'] !== '' && $data['description_obj'] !== NULL) ? "'{$data['description_obj']}'" : 'NULL') . ', `ref_o_gameplay`=' . (($data['ref_o_gameplay'] !== '' && $data['ref_o_gameplay'] !== NULL) ? "'{$data['ref_o_gameplay']}'" : 'NULL') . ', `creer_par`=' . "'{$data['creer_par']}'" . ', `rattache_a_dos2j`=' . (($data['rattache_a_dos2j'] !== '' && $data['rattache_a_dos2j'] !== NULL) ? "'{$data['rattache_a_dos2j']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"Objectifs_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: Objectifs_after_insert
	if(function_exists('Objectifs_after_insert')){
		$res = sql("select * from `Objectifs` where `id_objectif`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!Objectifs_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	sql("insert ignore into membership_userrecords set tableName='Objectifs', pkValue='" . makeSafe($recID, false) . "', memberID='" . makeSafe(getLoggedMemberID(), false) . "', dateAdded='" . time() . "', dateUpdated='" . time() . "', groupID='" . getLoggedGroupID() . "'", $eo);

	return $recID;
}

function Objectifs_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('Objectifs');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Objectifs' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Objectifs' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: Objectifs_before_delete
	if(function_exists('Objectifs_before_delete')){
		$args=array();
		if(!Objectifs_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `Objectifs` where `id_objectif`='$selected_id'", $eo);

	// hook: Objectifs_after_delete
	if(function_exists('Objectifs_after_delete')){
		$args=array();
		Objectifs_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='Objectifs' and pkValue='$selected_id'", $eo);
}

function Objectifs_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('Objectifs');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Objectifs' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Objectifs' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['titreobj'] = makeSafe($_REQUEST['titreobj']);
		if($data['titreobj'] == empty_lookup_value){ $data['titreobj'] = ''; }
	if($data['titreobj']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Titre de l\'objectif': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['description_obj'] = makeSafe($_REQUEST['description_obj']);
		if($data['description_obj'] == empty_lookup_value){ $data['description_obj'] = ''; }
	if(is_array($_REQUEST['ref_o_gameplay'])){
		$MultipleSeparator = ', ';
		foreach($_REQUEST['ref_o_gameplay'] as $k => $v)
			$data['ref_o_gameplay'] .= makeSafe($v) . $MultipleSeparator;
		$data['ref_o_gameplay']=substr($data['ref_o_gameplay'], 0, -1 * strlen($MultipleSeparator));
	}else{
		$data['ref_o_gameplay']='';
	}
	$data['rattache_a_dos2j'] = makeSafe($_REQUEST['rattache_a_dos2j']);
		if($data['rattache_a_dos2j'] == empty_lookup_value){ $data['rattache_a_dos2j'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: Objectifs_before_update
	if(function_exists('Objectifs_before_update')){
		$args=array();
		if(!Objectifs_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `Objectifs` set       `titreobj`=' . (($data['titreobj'] !== '' && $data['titreobj'] !== NULL) ? "'{$data['titreobj']}'" : 'NULL') . ', `description_obj`=' . (($data['description_obj'] !== '' && $data['description_obj'] !== NULL) ? "'{$data['description_obj']}'" : 'NULL') . ', `ref_o_gameplay`=' . (($data['ref_o_gameplay'] !== '' && $data['ref_o_gameplay'] !== NULL) ? "'{$data['ref_o_gameplay']}'" : 'NULL') . ', `rattache_a_dos2j`=' . (($data['rattache_a_dos2j'] !== '' && $data['rattache_a_dos2j'] !== NULL) ? "'{$data['rattache_a_dos2j']}'" : 'NULL') . " where `id_objectif`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="Objectifs_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: Objectifs_after_update
	if(function_exists('Objectifs_after_update')){
		$res = sql("SELECT * FROM `Objectifs` WHERE `id_objectif`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id_objectif'];
		$args = array();
		if(!Objectifs_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='Objectifs' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function Objectifs_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('Objectifs');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_rattache_a_dos2j = thisOr(undo_magic_quotes($_REQUEST['filterer_rattache_a_dos2j']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: ref_o_gameplay
	$combo_ref_o_gameplay = new Combo;
	$combo_ref_o_gameplay->ListType = 3;
	$combo_ref_o_gameplay->MultipleSeparator = ', ';
	$combo_ref_o_gameplay->ListBoxHeight = 10;
	$combo_ref_o_gameplay->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/Objectifs.ref_o_gameplay.csv')){
		$ref_o_gameplay_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/Objectifs.ref_o_gameplay.csv')));
		$combo_ref_o_gameplay->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($ref_o_gameplay_data)));
		$combo_ref_o_gameplay->ListData = $combo_ref_o_gameplay->ListItem;
	}else{
		$combo_ref_o_gameplay->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Eviter;;Atteindre;;D&#233;truire;;Cr&#233;er;;G&#233;rer;;D&#233;placer;;Al&#233;atoire;;Choisir;;Tirer;;Ecrire")));
		$combo_ref_o_gameplay->ListData = $combo_ref_o_gameplay->ListItem;
	}
	$combo_ref_o_gameplay->SelectName = 'ref_o_gameplay';
	// combobox: rattache_a_dos2j
	$combo_rattache_a_dos2j = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='Objectifs' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='Objectifs' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `Objectifs` where `id_objectif`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'Objectifs_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_ref_o_gameplay->SelectedData = $row['ref_o_gameplay'];
		$combo_rattache_a_dos2j->SelectedData = $row['rattache_a_dos2j'];
	}else{
		$combo_rattache_a_dos2j->SelectedData = $filterer_rattache_a_dos2j;
	}
	$combo_ref_o_gameplay->Render();
	$combo_rattache_a_dos2j->HTML = '<span id="rattache_a_dos2j-container' . $rnd1 . '"></span><input type="hidden" name="rattache_a_dos2j" id="rattache_a_dos2j' . $rnd1 . '" value="' . html_attr($combo_rattache_a_dos2j->SelectedData) . '">';
	$combo_rattache_a_dos2j->MatchText = '<span id="rattache_a_dos2j-container-readonly' . $rnd1 . '"></span><input type="hidden" name="rattache_a_dos2j" id="rattache_a_dos2j' . $rnd1 . '" value="' . html_attr($combo_rattache_a_dos2j->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_rattache_a_dos2j__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['rattache_a_dos2j'] : $filterer_rattache_a_dos2j); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(rattache_a_dos2j_reload__RAND__) == 'function') rattache_a_dos2j_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function rattache_a_dos2j_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#rattache_a_dos2j-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_rattache_a_dos2j__RAND__.value, t: 'Objectifs', f: 'rattache_a_dos2j' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="rattache_a_dos2j"]').val(resp.results[0].id);
							$j('[id=rattache_a_dos2j-container-readonly__RAND__]').html('<span id="rattache_a_dos2j-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Dossier_histoire_view_parent]').hide(); }else{ $j('.btn[id=Dossier_histoire_view_parent]').show(); }


							if(typeof(rattache_a_dos2j_update_autofills__RAND__) == 'function') rattache_a_dos2j_update_autofills__RAND__();
						}
					});
				},
				width: ($j('fieldset .col-xs-11').width() - select2_max_width_decrement()) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'Objectifs', f: 'rattache_a_dos2j' }; },
					results: function(resp, page){ return resp; }
				},
				escapeMarkup: function(str){ return str; }
			}).on('change', function(e){
				AppGini.current_rattache_a_dos2j__RAND__.value = e.added.id;
				AppGini.current_rattache_a_dos2j__RAND__.text = e.added.text;
				$j('[name="rattache_a_dos2j"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Dossier_histoire_view_parent]').hide(); }else{ $j('.btn[id=Dossier_histoire_view_parent]').show(); }


				if(typeof(rattache_a_dos2j_update_autofills__RAND__) == 'function') rattache_a_dos2j_update_autofills__RAND__();
			});

			if(!$j("#rattache_a_dos2j-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_rattache_a_dos2j__RAND__.value, t: 'Objectifs', f: 'rattache_a_dos2j' },
					success: function(resp){
						$j('[name="rattache_a_dos2j"]').val(resp.results[0].id);
						$j('[id=rattache_a_dos2j-container-readonly__RAND__]').html('<span id="rattache_a_dos2j-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Dossier_histoire_view_parent]').hide(); }else{ $j('.btn[id=Dossier_histoire_view_parent]').show(); }

						if(typeof(rattache_a_dos2j_update_autofills__RAND__) == 'function') rattache_a_dos2j_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_rattache_a_dos2j__RAND__.value, t: 'Objectifs', f: 'rattache_a_dos2j' },
				success: function(resp){
					$j('[id=rattache_a_dos2j-container__RAND__], [id=rattache_a_dos2j-container-readonly__RAND__]').html('<span id="rattache_a_dos2j-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=Dossier_histoire_view_parent]').hide(); }else{ $j('.btn[id=Dossier_histoire_view_parent]').show(); }

					if(typeof(rattache_a_dos2j_update_autofills__RAND__) == 'function') rattache_a_dos2j_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/Objectifs_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/Objectifs_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Objectif details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return Objectifs_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return Objectifs_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return Objectifs_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#titreobj').replaceWith('<div class=\"form-control-static\" id=\"titreobj\">' + (jQuery('#titreobj').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#ref_o_gameplay').replaceWith('<div class=\"form-control-static\" id=\"ref_o_gameplay\">' + (jQuery('#ref_o_gameplay').val() || '') + '</div>'); jQuery('#ref_o_gameplay-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#s2id_ref_o_gameplay').remove();\n";
		$jsReadOnly .= "\tjQuery('#rattache_a_dos2j').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#rattache_a_dos2j_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(ref_o_gameplay)%%>', $combo_ref_o_gameplay->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(ref_o_gameplay)%%>', $combo_ref_o_gameplay->SelectedData, $templateCode);
	$templateCode=str_replace('<%%COMBO(rattache_a_dos2j)%%>', $combo_rattache_a_dos2j->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(rattache_a_dos2j)%%>', $combo_rattache_a_dos2j->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(rattache_a_dos2j)%%>', urlencode($combo_rattache_a_dos2j->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'rattache_a_dos2j' => array('Dossier_histoire', 'Rattache a dos2j'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id_objectif)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(titreobj)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(description_obj)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(ref_o_gameplay)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(creer_par)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(rattache_a_dos2j)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id_objectif)%%>', html_attr($row['id_objectif']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id_objectif)%%>', urlencode($urow['id_objectif']), $templateCode);
		$templateCode=str_replace('<%%VALUE(titreobj)%%>', html_attr($row['titreobj']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(titreobj)%%>', urlencode($urow['titreobj']), $templateCode);
		if($AllowUpdate || $AllowInsert){
			$templateCode = str_replace('<%%HTMLAREA(description_obj)%%>', '<textarea name="description_obj" id="description_obj" rows="5">' . html_attr($row['description_obj']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(description_obj)%%>', '<div id="description_obj" class="form-control-static">' . $row['description_obj'] . '</div>', $templateCode);
		}
		$templateCode=str_replace('<%%VALUE(description_obj)%%>', nl2br($row['description_obj']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(description_obj)%%>', urlencode($urow['description_obj']), $templateCode);
		$templateCode=str_replace('<%%VALUE(ref_o_gameplay)%%>', html_attr($row['ref_o_gameplay']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(ref_o_gameplay)%%>', urlencode($urow['ref_o_gameplay']), $templateCode);
		$templateCode=str_replace('<%%VALUE(creer_par)%%>', html_attr($row['creer_par']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(creer_par)%%>', urlencode($urow['creer_par']), $templateCode);
		$templateCode=str_replace('<%%VALUE(rattache_a_dos2j)%%>', html_attr($row['rattache_a_dos2j']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rattache_a_dos2j)%%>', urlencode($urow['rattache_a_dos2j']), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id_objectif)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id_objectif)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(titreobj)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(titreobj)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%HTMLAREA(description_obj)%%>', '<textarea name="description_obj" id="description_obj" rows="5">Le joueur doit ...</textarea>', $templateCode);
		$templateCode=str_replace('<%%VALUE(ref_o_gameplay)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(ref_o_gameplay)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(creer_par)%%>', '<%%creatorUsername%%>', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(creer_par)%%>', urlencode('<%%creatorUsername%%>'), $templateCode);
		$templateCode=str_replace('<%%VALUE(rattache_a_dos2j)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rattache_a_dos2j)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('Objectifs');
	if($selected_id){
		$jdata = get_joined_record('Objectifs', $selected_id);
		$rdata = $row;
	}
	$cache_data = array(
		'rdata' => array_map('nl2br', array_map('addslashes', $rdata)),
		'jdata' => array_map('nl2br', array_map('addslashes', $jdata)),
	);
	$templateCode .= loadView('Objectifs-ajax-cache', $cache_data);

	// hook: Objectifs_dv
	if(function_exists('Objectifs_dv')){
		$args=array();
		Objectifs_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>